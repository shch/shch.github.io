{"meta":{"title":"大前端说","subtitle":"","description":"","author":"shch","url":"http://example.com","root":"/"},"pages":[{"title":"关于","date":"2020-10-07T01:16:23.680Z","updated":"2020-10-07T01:16:23.680Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"分享关于大前端的所有有意思的话题，包括web，移动端。欢迎加我微信 meetbc，一起交流"}],"posts":[{"title":"FabricJs项目【简易画板】--项目搭建","slug":"FabricJs项目【简易画笔】-项目搭建","date":"2020-10-12T14:48:56.000Z","updated":"2020-10-12T15:21:03.017Z","comments":true,"path":"/FabricJs项目【简易画笔】-项目搭建/","link":"","permalink":"http://example.com/FabricJs%E9%A1%B9%E7%9B%AE%E3%80%90%E7%AE%80%E6%98%93%E7%94%BB%E7%AC%94%E3%80%91-%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/","excerpt":"","text":"b站 FabricJs项目【简易画笔】–项目搭建 项目相关的代码12345678910git clone https:&#x2F;&#x2F;github.com&#x2F;shch&#x2F;vuefabric.git &#x2F;&#x2F;克隆项目vue create . &#x2F;&#x2F;创建项目 npm run serve &#x2F;&#x2F;项目本地启动git push &#x2F;&#x2F;推送代码npm install fabric --save &#x2F;&#x2F;下载库 fabricjs 相关代码12345678910111213141516171819202122232425262728&lt;template&gt; &lt;div class&#x3D;&quot;home&quot;&gt; &lt;canvas id&#x3D;&quot;c&quot; width&#x3D;&quot;400&quot; height&#x3D;&quot;400&quot;&gt;&lt;&#x2F;canvas&gt; &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script&gt;&#x2F;&#x2F; @ is an alias to &#x2F;srcimport &#123; fabric &#125; from &quot;fabric&quot;;export default &#123; name: &#39;Home&#39;, mounted()&#123; var canvas &#x3D; new fabric.Canvas(&quot;c&quot;); var rect &#x3D; new fabric.Rect(&#123; left: 100, top: 100, fill: &#39;red&#39;, width: 400, height: 400 &#125;); canvas.add(rect); &#125; &#125; &lt;&#x2F;script&gt; 参考 官网地址 vue官网 vue cli 官网 [github 项目地址] (https://github.com/shch/vuefabric) 联系我加我的wx:meetbc,关注我的公众号:大前端说。欢迎交流关于前端的任何话题。","categories":[],"tags":[{"name":"FabricJs","slug":"FabricJs","permalink":"http://example.com/tags/FabricJs/"}]},{"title":"FabricJs使用 -- 图片","slug":"FabricJs使用-图片","date":"2020-10-11T12:03:04.000Z","updated":"2020-10-11T12:15:03.665Z","comments":true,"path":"/FabricJs使用-图片/","link":"","permalink":"http://example.com/FabricJs%E4%BD%BF%E7%94%A8-%E5%9B%BE%E7%89%87/","excerpt":"","text":"图片使用 fabric.Image 可以方便的对图片做一些处理。 举例12345678ar imgElement &#x3D; document.getElementById(&#39;dog&#39;); var imgInstance &#x3D; new fabric.Image(imgElement, &#123; left: 50, top: 50, angle: 10, opacity: 0.85 &#125;);canvas.add(imgInstance); 对图片做放大缩小和X方向翻转12345fabric.Image.fromURL(&#39;dog.png&#39;, function(oImg) &#123; &#x2F;&#x2F; scale image down, and flip it, before adding it onto canvas oImg.scale(0.5).set(&#39;flipX&#39;, true); canvas.add(oImg); &#125;); 图片滤镜12345 fabric.Image.fromURL(&#39;https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;10&#x2F;11&#x2F;uI4qfivbyAKsOQ9.png&#39;, (img) &#x3D;&gt; &#123; img.filters.push(new fabric.Image.filters.Grayscale()); img.applyFilters(); canvas.add(img);&#125;, &#123;crossOrigin: &#39;anonymous&#39;&#125;); 需要考虑一个 crossOrigin的问题 给滤镜加多个参数 12345678fabric.Image.fromURL(&#39;https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;10&#x2F;11&#x2F;uI4qfivbyAKsOQ9.png&#39;, (img) &#x3D;&gt; &#123; img.filters.push(new fabric.Image.filters.Sepia()); new fabric.Image.filters.Brightness(&#123; brightness: 100 &#125;); img.applyFilters(); canvas.add(img); &#125;, &#123;crossOrigin: &#39;anonymous&#39;&#125;); 参考 官网地址 联系我关注微信号:大前端说，获取文章中提到的代码案例。库使用过程有什么问题，可以跟我沟通，加我的wx:meetbc。欢迎交流关于前端的任何话题。","categories":[],"tags":[{"name":"FabricJS","slug":"FabricJS","permalink":"http://example.com/tags/FabricJS/"}]},{"title":"FabricJs使用 -- Group","slug":"FabricJs使用-Group","date":"2020-10-10T10:39:25.000Z","updated":"2020-10-10T10:51:03.498Z","comments":true,"path":"/FabricJs使用-Group/","link":"","permalink":"http://example.com/FabricJs%E4%BD%BF%E7%94%A8-Group/","excerpt":"","text":"Group组的概念，就是可以同时操作多个对象，方便一起处理。 举例123456789101112131415161718192021var circle &#x3D; new fabric.Circle(&#123; radius: 100, fill: &#39;#eef&#39;, scaleY: 0.5, originX: &#39;center&#39;, originY: &#39;center&#39; &#125;);var text &#x3D; new fabric.Text(&#39;hello world&#39;, &#123; fontSize: 30, originX: &#39;center&#39;, originY: &#39;center&#39; &#125;);var group &#x3D; new fabric.Group([ circle, text ], &#123; left: 150, top: 100, angle: -10 &#125;);canvas.add(group); 对其中的对象集修改12345group.item(0).set(&#39;fill&#39;, &#39;red&#39;); group.item(1).set(&#123; text: &#39;trololo&#39;, fill: &#39;white&#39; &#125;); 元素相对于group定位12345678910111213141516171819202122var circle1 &#x3D; new fabric.Circle(&#123; radius: 50, fill: &#39;red&#39;, left: 0 &#125;);var circle2 &#x3D; new fabric.Circle(&#123; radius: 50, fill: &#39;green&#39;, left: 100&#125;);var circle3 &#x3D; new fabric.Circle(&#123; radius: 50, fill: &#39;blue&#39;, left: 200&#125;);var group &#x3D; new fabric.Group([ circle1, circle2, circle3 ], &#123; left: 200, top: 100&#125;);canvas.add(group); 序列化 12345var canvas &#x3D; new fabric.Canvas(&#39;c&#39;);JSON.stringify(canvas); SVG 12345678910 canvas.add(new fabric.Rect(&#123; left: 50, top: 50, height: 20, width: 20, fill: &#39;green&#39;&#125;));console.log(canvas.toSVG()); 参考 官网地址 联系我关注微信号:大前端说，获取文章中提到的代码案例。库使用过程有什么问题，可以跟我沟通，加我的wx:meetbc。欢迎交流关于前端的任何话题。","categories":[],"tags":[{"name":"FabricJS","slug":"FabricJS","permalink":"http://example.com/tags/FabricJS/"}]},{"title":"FabricJs使用 -- 文本","slug":"FabricJs使用-文本","date":"2020-10-09T11:39:39.000Z","updated":"2020-10-09T12:08:13.993Z","comments":true,"path":"/FabricJs使用-文本/","link":"","permalink":"http://example.com/FabricJs%E4%BD%BF%E7%94%A8-%E6%96%87%E6%9C%AC/","excerpt":"","text":"Text支持的操作 Multiline support Native text methods unfortunately simply ignore new lines. Text alignment Left, center, right. Useful when working with multiline text. Text background Background also respects text alignment. Text decoration Underline, overline, strike-through. Line height Useful when working with multiline text. Char spacing Makes text more compact or more spaced Subranges apply colors and properties to subranges of your text object Multibyte support emoticons! On canvas editing with the interactive class you can type text directly over the canvas 举例简单的初始化12var text &#x3D; new fabric.Text(&#39;hello world&#39;, &#123; left: 100, top: 100 &#125;);canvas.add(text); fontFamily123var comicSansText &#x3D; new fabric.Text(&quot;I&#39;m in Comic Sans&quot;, &#123; fontFamily: &#39;Comic Sans&#39;&#125;); 设置字体 fontSize123var text40 &#x3D; new fabric.Text(&quot;I&#39;m at fontSize 40&quot;, &#123; fontSize: 40&#125;); 设置字体大小 fontWeight123var boldText &#x3D; new fabric.Text(&quot;I&#39;m at bold text&quot;, &#123; fontWeight: &#39;bold&#39;&#125;); textDecoration123 var underlineText &#x3D; new fabric.Text(&quot;I&#39;m an underlined text&quot;, &#123; underline: true&#125;); shadow123 var shadowText1 &#x3D; new fabric.Text(&quot;I&#39;m a text with shadow&quot;, &#123; shadow: &#39;rgba(0,0,0,0.3) 5px 5px 5px&#39;&#125;); 设置阴影 fontStyle1234 var italicText &#x3D; new fabric.Text(&quot;A very fancy italic text&quot;, &#123; fontStyle: &#39;italic&#39;, fontFamily: &#39;Delicious&#39;&#125;); stroke and strokeWidth1234var textWithStroke &#x3D; new fabric.Text(&quot;Text with a stroke&quot;, &#123; stroke: &#39;#ff1318&#39;, strokeWidth: 1 &#125;); textAlign1234var text &#x3D; &#39;this is\\na multiline\\ntext\\naligned right!&#39;; var alignedRightText &#x3D; new fabric.Text(text, &#123; textAlign: &#39;right&#39; &#125;); lineHeight123 var lineHeight3 &#x3D; new fabric.Text(&#39;Lorem ipsum Lorem\\nLorem ipsum Lorem\\n&#39;, &#123; lineHeight: 3&#125;); 点击事件12345678var text &#x3D; &#39;this is\\na multiline\\ntext\\nwith\\ncustom lineheight\\n&amp;background&#39;;var textWithBackground &#x3D; new fabric.Text(text, &#123; textBackgroundColor: &#39;rgb(0,200,0)&#39;&#125;);canvas.add(textWithBackground);textWithBackground.on(&#39;selected&#39;, function() &#123; console.log(&#39;selected&#39;);&#125;); 参考 官网地址 联系我关注微信号:大前端说，获取文章中提到的代码案例。库使用过程有什么问题，可以跟我沟通，加我的wx:meetbc。欢迎交流关于前端的任何话题。","categories":[],"tags":[{"name":"FabricJS","slug":"FabricJS","permalink":"http://example.com/tags/FabricJS/"}]},{"title":"FabricJS使用小结 -- 初步认识","slug":"FabricJS使用小结-初步认识","date":"2020-10-07T01:22:11.000Z","updated":"2020-10-08T14:14:04.430Z","comments":true,"path":"/FabricJS使用小结-初步认识/","link":"","permalink":"http://example.com/FabricJS%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93-%E5%88%9D%E6%AD%A5%E8%AE%A4%E8%AF%86/","excerpt":"","text":"简介什么是 Fabric.jsFabric.js是一个可以简化Canvas程序编写的库。Canvas提供一个好的画布能力, 但是Api不够友好。绘制简单图形其实还可以, 不过做一些复杂的图形绘制, 编写一些复杂的效果，就不是那么方便了。Fabric.js就是为此而开发，它主要就是用对象的方式去编写代码。 举例传统的画正方形代码1234567891011&#x2F;&#x2F; reference canvas element (with id&#x3D;&quot;c&quot;)var canvasEl &#x3D; document.getElementById(&#39;c&#39;);&#x2F;&#x2F; get 2d context to draw on (the &quot;bitmap&quot; mentioned earlier)var ctx &#x3D; canvasEl.getContext(&#39;2d&#39;);&#x2F;&#x2F; set fill color of contextctx.fillStyle &#x3D; &#39;red&#39;;&#x2F;&#x2F; create rectangle at a 100,100 point, with 20x20 dimensionsctx.fillRect(100, 100, 20, 20); Fabric的方式画1234567891011121314&#x2F;&#x2F; create a wrapper around native canvas element (with id&#x3D;&quot;c&quot;)var canvas &#x3D; new fabric.Canvas(&#39;c&#39;);&#x2F;&#x2F; create a rectangle objectvar rect &#x3D; new fabric.Rect(&#123; left: 100, top: 100, fill: &#39;red&#39;, width: 20, height: 20&#125;);&#x2F;&#x2F; &quot;add&quot; rectangle onto canvascanvas.add(rect); 试着旋转一下角度 传统的123ctx.translate(100, 100);ctx.rotate(Math.PI &#x2F; 180 * 45);ctx.fillRect(-10, -10, 20, 20); Fabric的12345678910111213var canvas &#x3D; new fabric.Canvas(&#39;c&#39;);&#x2F;&#x2F; create a rectangle with angle&#x3D;45var rect &#x3D; new fabric.Rect(&#123; left: 100, top: 100, fill: &#39;red&#39;, width: 20, height: 20, angle: 45&#125;);canvas.add(rect); 如果我们想重新调整位置 传统的123&#x2F;&#x2F; erase entire canvas areactx.clearRect(0, 0, canvasEl.width, canvasEl.height);ctx.fillRect(20, 50, 20, 20); Fabric的12rect.set(&#123; left: 20, top: 50 &#125;);canvas.renderAll(); objects fabric.Circle fabric.Ellipse fabric.Line fabric.Polygon fabric.Polyline fabric.Rect fabric.Triangle 画一个三角形 和一个 圆形 1234567891011&#x2F;&#x2F; create a wrapper around native canvas element (with id&#x3D;&quot;c&quot;)var canvas &#x3D; new fabric.Canvas(&#39;c&#39;);var circle &#x3D; new fabric.Circle(&#123; radius: 20, fill: &#39;green&#39;, left: 100, top: 100&#125;);var triangle &#x3D; new fabric.Triangle(&#123; width: 20, height: 30, fill: &#39;blue&#39;, left: 50, top: 50&#125;);canvas.add(circle, triangle); Manipulating objects【操作】可以简单的使用set来控制对象属性 positioning — left, top; dimension — width, height; rendering — fill, opacity, stroke, strokeWidth; scaling and rotation — scaleX, scaleY, angle; and even those related to flipping — flipX, flipY. 123rect.set(&#39;fill&#39;, &#39;red&#39;);rect.set(&#123; strokeWidth: 5, stroke: &#39;rgba(100,200,200,0.5)&#39; &#125;);rect.set(&#39;angle&#39;, 15).set(&#39;flipY&#39;, true); 参考 官网地址 联系我库使用过程有什么问题，可以跟我沟通，加我的wx:meetbc。欢迎交流关于前端的任何话题。","categories":[],"tags":[{"name":"FabricJS","slug":"FabricJS","permalink":"http://example.com/tags/FabricJS/"}]}],"categories":[],"tags":[{"name":"FabricJs","slug":"FabricJs","permalink":"http://example.com/tags/FabricJs/"},{"name":"FabricJS","slug":"FabricJS","permalink":"http://example.com/tags/FabricJS/"}]}